name: Publish

on:
  # This allows us to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version-strategy:
        type: choice
        description: 'Version strategy'
        required: true
        options:
            - 'patch'
            - 'minor'
            - 'major'
        default: patch
      title:
        type: string
        description: 'Release title'
        required: true

concurrency:
  group: deploy
  cancel-in-progress: true

# We need these permissions create new GitHub releases
permissions: write-all

jobs:
  update_package_version:
    name: Update package version
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack about new release
        uses: ravsamhq/notify-slack-action@v2
        with:
          notification_title: "‚è≥ Starting new constructor-ui-autocomplete deployment"
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - uses: actions/checkout@v4
      - uses: oleksiyrudenko/gha-git-credentials@v2-latest
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'
      - uses: actions/setup-node@v3
        with:
          node-version: '18.12.x'

      - name: Install dependencies
        run: npm ci

      - name: Get latest release tag
        id: last_release
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          view_top: 1

      - name: Prepare version and strategy arguments
        id: prepare-args
        run: |
            # remove the "v" prefix.
            version=$(echo "${{steps.last_release.outputs.tag_name}}" | tr -d 'v')

            # maps the strategy so the "increment-semantic-version" can understand it.
            strategy=$(node .github/workflows/helpers/map-strategy.js ${{ github.event.inputs.version-strategy }})

            echo "strategy=$strategy" >> "$GITHUB_OUTPUT"
            echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Bump release version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.prepare-args.outputs.version }}
          version-fragment: ${{ steps.prepare-args.outputs.strategy }}

      - name: Set new release version
        id: set-version
        run: echo "version=v${{ steps.bump_version.outputs.next-version }}" >> "$GITHUB_OUTPUT"

      - name: Create release git tag
        run: git tag -fa ${{ steps.set-version.outputs.version }} -m "${{ github.event.inputs.title }}"

      - name: Push the created tag
        # We use --force here to handle any already existing tags - In case we need to re-run this workflow.
        run: git push --force origin ${{ steps.set-version.outputs.version }}

      - name: Set deployment SHA
        id: set-deploy-sha
        run: echo "deploy-sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

      - name: Notify Slack about new package version
        uses: ravsamhq/notify-slack-action@v2
        with:
          notification_title: "‚úÖ constructor-ui-autocomplete package version bumped to ${{ steps.set-version.outputs.version }} successfully"
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    outputs:
        version: ${{ steps.set-version.outputs.version }}
        deploy-sha: ${{ steps.set-deploy-sha.outputs.deploy-sha }}

  create_github_release:
    name: Create GitHub release
    needs: update_package_version
    uses: ./.github/workflows/publish-create-github-release.yml
    with:
      version: ${{ needs.update_package_version.outputs.version }}
      title: ${{ github.event.inputs.title }}
      deploy-sha: ${{ needs.update_package_version.outputs.deploy-sha }}
    secrets: inherit

  publish_to_npm:
    name: Publish to NPM
    needs: update_package_version
    uses: ./.github/workflows/publish-npm.yml
    with:
      deploy-sha: ${{ needs.update_package_version.outputs.deploy-sha }}
    secrets: inherit

  publish_to_cdn:
    name: Publish to CDN
    needs: update_package_version
    uses: ./.github/workflows/publish-cdn.yml
    with:
      version: ${{ needs.update_package_version.outputs.version }}
    secrets: inherit

  final_deployment_notification:
    name: Final deployment notification
    needs: [create_github_release, publish_to_npm, publish_to_cdn]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Set final pipeline status
        id: set-final-pipeline-status
        run: |
          status="${{ needs.create_github_release.result }}"

          if [ "$status" = "success" ]; then
            status="${{ needs.publish_to_npm.result }}"
          fi

          echo "status=$status" >> "$GITHUB_OUTPUT"

      - name: Report deployment status to Slack
        uses: ravsamhq/notify-slack-action@v2
        with:
          notification_title: "üèÅ Constructor-ui-autocomplete deployment completed"
          status: ${{ steps.set-final-pipeline-status.outputs.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
